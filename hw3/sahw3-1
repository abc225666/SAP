#!/bin/sh

zfs_bin=$(which zfs || echo "/sbin/zfs")


if [ "$(whoami)" != "root" ]; then
	echo "need root!"
	exit
fi

if ! [ -f /var/log/backuplog ]; then
	echo -n "">/var/log/backuplog
fi

mod=""
rcount=20
dataset=".*"
id=0
script_pos="/usr/home/terry/sahw/hw3/script"


if [ "$1" != "--list" -a "$1" != "--delete" ]; then
	mod="create"
	dataset=$1
	if ! [ -z $2 ]; then
		rcount=$2
	fi
fi

if [ "$1" == "--list" ]; then
	mod="list"
	if ! [ -z $2 ]; then
		dataset=$2
		if ! [ -z $3 ]; then
			id=$3
		fi
	fi
	
fi

if [ "$1" == "--delete" ]; then
	mod="delete"
	if ! [ -z $2 ]; then
		dataset=$2
		if ! [ -z $3 ]; then
			id=$3
		fi
	fi
fi

create_backup()
{
	date=$(date +%F::%X)

	sh $script_pos "${dataset}" ${rcount}
	
}

list_backup()
{
	${zfs_bin} list -t snap -o name|grep ${dataset}"@" |awk '
		BEGIN{
			num=1;
			"which zfs|| echo \"/sbin/zfs\""|getline zfs;
			print zfs;
			printf "%-5s\t%-50s\t%-20s\n","ID","Dataset","Time";
		}
		{
			if(NR>0)
			{
				"echo \""$0"\" |cut -d\"@\" -f1"|getline set;
				zfs " list -t snap -o creation \""$0"\"|tail -n 1"|getline timeset;
				printf "%-5s\t%-50s\t%-20s\n",num,set,timeset;
				num++;
			}
		}'


}


exe_func()
{
	case $mod in 
		
		"create")
			create_backup
		;;

		"list")
			list_backup
		;;

		"delete")
		;;
		
	esac
}


exe_func
