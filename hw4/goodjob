#!/bin/sh

echo $$ > /var/run/goodjob.pid


trap 'reload;' SIGHUP


exe_file="/usr/local/bin/goodjob"

timer=0



parse()
{
	enable=""
	policy=""
	CONFIG_FILE=$1
	SECTION=$2
	ASECTION=$(echo "$SECTION" |sed 's/\//\\\//g')
	eval `sed -e 's/[[:space:]]*\=[[:space:]]*/=/g' \
   	-e 's/;.*$//' \
  	 -e 's/[[:space:]]*$//' \
   	-e 's/^[[:space:]]*//' \
   	-e "s/^\(.*\)=\([^\"']*\)$/\1=\"\2\"/" \
   	< $CONFIG_FILE \
  	| sed -n -e "/^\[$ASECTION\]/,/^\s*\[/{/^[^;].*\=.*/p;}"`
 
	: ${enable:="yes"}
	: ${policy:="20x1d"}
 
 	if [ $enable == "yes" ]; then
		rcount=$(echo $policy | awk 'BEGIN{FS="x"}{print $1}')
		daytype=$(echo $policy | awk 'BEGIN{FS="x"}{print $2}'| tail -c -2)
		day=$(echo $policy | awk 'BEGIN{FS="x"}{print $2}' | sed 's/'$daytype'//g')
		case $daytype in
			"m")
				day=$((day))
			;;
			"h")
				day=$((day*60))
			;;
			"d")
				day=$((day*14400))
			;;
			"w")
				day=$((day*100800))
			;;
		esac
		if [ $((timer%day)) -eq 0 ]; then
			/usr/local/bin/zbackup $SECTION $rcount
		fi
	fi


}
#echo "$1"
config_path="$1"
: ${config_path:="/usr/local/etc/zbackup.conf"}

tmpfile=$(mktemp)

cat $config_path > $tmpfile


#sec=$(cat $tmpfile | grep "\[.*\]" | sed 's/\[//g' | sed 's/\]//g')
#for s in $sec; do
#	parse $tmpfile $s
#done

reload()
{
	cat $config_path > $tmpfile
}


while [ 0 -eq 0 ]
do
	sec=$(cat $tmpfile | grep "\[.*\]" | sed 's/\[//g' | sed 's/\]//g')
	for s in $sec; do
        	parse $tmpfile $s
	done 
	timer=$((timer+1))
	
	sleep 60
done
